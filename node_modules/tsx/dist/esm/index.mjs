var L=Object.defineProperty;var i=(t,a)=>L(t,"name",{value:a,configurable:!0});import{isMainThread as $}from"node:worker_threads";import{i as w,a as D,e as I,m as M}from"../node-features-_8ZFwP_x.mjs";import{r as b}from"../register-Bi7t-9kv.mjs";import{l as P,t as y,i as A,f as v,r as R,a as T,b as C,d as W,e as q,g as k}from"../module-resolve-filename-B8yyQX2L.mjs";import{fileURLToPath as O,pathToFileURL as x}from"node:url";import{readFile as Q}from"node:fs/promises";import{p as G,b as H,t as X}from"../index-CJbZ7IJL.mjs";import{i as U}from"../source-map-Ctni5cdJ.mjs";import{p as j}from"../client-CwCkgTEz.mjs";import N from"node:path";import F from"node:fs";import"node:module";import"get-tsconfig";import"esbuild";import"node:crypto";import"node:os";import"../temporary-directory-CwHp0_NW.mjs";import"node:net";import"../get-pipe-path-Vzuhiw7V.mjs";const p={active:!0},K=i(async t=>{if(!t)throw new Error(`tsx must be loaded with --import instead of --loader
The --loader flag was deprecated in Node v20.6.0 and v18.19.0`);p.namespace=t.namespace,t.tsconfig!==!1&&P(t.tsconfig??process.env.TSX_TSCONFIG_PATH),t.port&&(p.port=t.port,t.port.on("message",a=>{a==="deactivate"&&(p.active=!1,t.port.postMessage({type:"deactivated"}))}))},"initialize"),z=i(()=>(P(process.env.TSX_TSCONFIG_PATH),"process.setSourceMapsEnabled(true);"),"globalPreload"),d=new Map,B=i(async t=>{if(d.has(t))return d.get(t);if(!await F.promises.access(t).then(()=>!0,()=>!1)){d.set(t,void 0);return}const e=await F.promises.readFile(t,"utf8");try{const r=JSON.parse(e);return d.set(t,r),r}catch{throw new Error(`Error parsing: ${t}`)}},"readPackageJson"),V=i(async t=>{let a=new URL("package.json",t);for(;!a.pathname.endsWith("/node_modules/package.json");){const e=O(a),r=await B(e);if(r)return r;const n=a;if(a=new URL("../package.json",a),a.pathname===n.pathname)break}},"findPackageJson"),Y=i(async t=>(await V(t))?.type??"commonjs","getPackageType"),Z=i(t=>{const a=t.indexOf("?");t=a===-1?t:t.slice(0,a);const e=N.extname(t);if(e===".json")return"json";if(e===".mjs"||e===".mts")return"module";if(e===".cjs"||e===".cts")return"commonjs"},"getFormatFromExtension"),tt=i(t=>{const a=Z(t);if(a)return a;if(y.test(t))return Y(t)},"getFormatFromFileUrl"),u="tsx-namespace=",g=i(t=>{const a=t.indexOf(u);if(a===-1)return;const e=t[a-1];if(e!=="?"&&e!=="&")return;const r=a+u.length,n=t.indexOf("&",r);return n===-1?t.slice(r):t.slice(r,n)},"getNamespace"),l=w(D)?"importAttributes":"importAssertions",at=i(async(t,a,e)=>{if(!p.active||p.namespace&&p.namespace!==g(t))return e(t,a);if(p.port){const s=new URL(t);s.searchParams.delete("tsx-namespace"),p.port.postMessage({type:"load",url:s.toString()})}j.send&&j.send({type:"dependency",path:t}),A.test(t)&&(a[l]||(a[l]={}),a[l].type="json");const r=await e(t,a),n=t.startsWith("file://")?O(t):t;if(r.format==="commonjs"&&w(I)&&r.responseURL?.startsWith("file:")){const s=await Q(new URL(t),"utf8"),[,o]=G(s);if(o.length>0){const c=`module.exports={${o.map(h=>h.n).filter(h=>h!=="default").join(",")}}`,f=new URLSearchParams({filePath:n});r.responseURL=`data:text/javascript,${encodeURIComponent(c)}?${f.toString()}`}return r}if(!r.source)return r;const m=r.source.toString();if(r.format==="json"||y.test(t)){const s=await H(m,n,{tsconfigRaw:v?.(n)});return{format:"module",source:U(s)}}if(r.format==="module"){const s=X(n,m);s&&(r.source=U(s))}return r},"load"),E=i(async t=>(!t.format&&t.url.startsWith(q)&&(t.format=await tt(t.url)),t),"resolveMissingFormat"),st=[".js",".json",".ts",".tsx",".jsx"],_=i(async(t,a,e)=>{const[r,n]=t.split("?");let m;for(const s of st)try{return await E(await e(r+s+(n?`?${n}`:""),a))}catch(o){if(m===void 0&&o instanceof Error){const{message:c}=o;o.message=o.message.replace(`${s}'`,"'"),o.stack=o.stack.replace(c,o.message),m=o}}throw m},"tryExtensions"),S=i(async(t,a,e)=>{const r=T.test(t),n=r?"index":"/index",[m,s]=t.split("?");try{return await _(m+n+(s?`?${s}`:""),a,e)}catch(o){if(!r)try{return await _(t,a,e)}catch{}const c=o,{message:f}=c;throw c.message=c.message.replace(`${n.replace("/",N.sep)}'`,"'"),c.stack=c.stack.replace(f,c.message),c}},"tryDirectory"),J=i(async(t,a,e,r)=>{if(!p.active)return e(t,a);const n=a.parentURL&&g(a.parentURL),m=R(t);if(m){let s=g(t);if(n&&!s&&(s=n,t+=`${t.includes("?")?"&":"?"}${u}${n}`),p.namespace&&p.namespace!==s)return e(t,a);if(T.test(t))return await S(t,a,e)}else if(k&&!a.parentURL?.includes("/node_modules/")){const s=k(t);for(const o of s)try{return await J(x(o).toString(),a,e)}catch{}}if(m&&(y.test(a.parentURL)||C)){const s=W(t);if(s)for(const o of s)try{return await E(await e(o,a))}catch(c){const{code:f}=c;if(f!=="ERR_MODULE_NOT_FOUND"&&f!=="ERR_PACKAGE_PATH_NOT_EXPORTED")throw c}}try{const s=await E(await e(t,a));if(R(s.url)){const o=g(s.url);n&&!o&&(s.url+=`${s.url.includes("?")?"&":"?"}${u}${n}`)}return s}catch(s){if(s instanceof Error&&!r){const{code:o}=s;if(o==="ERR_UNSUPPORTED_DIR_IMPORT")try{return await S(t,a,e)}catch(c){if(c.code!=="ERR_PACKAGE_IMPORT_NOT_DEFINED")throw c}if(o==="ERR_MODULE_NOT_FOUND")try{return await _(t,a,e)}catch{}}throw s}},"resolve");w(M)&&$&&b();export{z as globalPreload,K as initialize,at as load,J as resolve};
