"use strict";var x=Object.defineProperty;var a=(e,n)=>x(e,"name",{value:n,configurable:!0});var o=require("node:module"),u=require("./module-resolve-filename-ClW3zsMQ.cjs"),v=require("node:fs"),p=require("./index-C1vsvhPH.cjs"),i=require("./source-map-BkNfvVZg.cjs"),f=require("./client-BTjWp1CE.cjs");const M=a(e=>{if(!e.includes("import")&&!e.includes("export"))return!1;try{return p.parseEsm(e)[3]}catch{return!0}},"isESM"),S=[".cts",".mts",".ts",".tsx",".jsx"],j=[".js",".cjs",".mjs"],l=Object.assign(Object.create(null),o._extensions),y=l[".js"],m=a((e,n)=>{const s=n.split("?")[0];f.parent?.send&&f.parent.send({type:"dependency",path:s});const c=S.some(r=>s.endsWith(r)),d=j.some(r=>s.endsWith(r));if(!c&&!d)return y(e,s);let t=v.readFileSync(s,"utf8");if(s.endsWith(".cjs")){const r=p.transformDynamicImport(n,t);r&&(t=i.shouldApplySourceMap()?i.inlineSourceMap(r):r.code)}else if(c||M(t)){const r=p.transformSync(t,n,{tsconfigRaw:u.fileMatcher?.(s)});t=i.shouldApplySourceMap()?i.inlineSourceMap(r):r.code}e._compile(t,s)},"transformer");[".js",".ts",".tsx",".jsx"].forEach(e=>{l[e]=m}),Object.defineProperty(l,".mjs",{value:m,enumerable:!1});const h=a(()=>{const{sourceMapsEnabled:e}=process,{_extensions:n,_resolveFilename:s}=o;u.loadTsconfig(process.env.TSX_TSCONFIG_PATH),process.setSourceMapsEnabled(!0);const c=u.createResolveFilename(s);return o._resolveFilename=c,o._extensions=l,a(()=>{e===!1&&process.setSourceMapsEnabled(!1),o._extensions=n,o._resolveFilename=s},"unregister")},"register");exports.register=h;
